/**
 * TERMX - WEB-BASED OPERATING SYSTEM SIMULATION
 * Version: 3.2 | Author: David | Platform: Web Browser
 * 
 * ================================================
 * üñ•Ô∏è COMPREHENSIVE SYSTEM DOCUMENTATION
 * ================================================
 * 
 * üìÅ FILE SYSTEM ARCHITECTURE (FileSystem Class)
 * ================================================
 * 
 * Core Structure:
 * - Root-based virtual file system with '/', '/home', '/bin' directories
 * - JSON-serialized storage in localStorage under "savefs" key
 * - Supports both text and binary files with encoding detection
 * - Automatic file type recognition by extension
 * 
 * File Operations:
 * ‚Ä¢ createDirectory(name, params) - Creates new directory
 * ‚Ä¢ createFile(name, content, params) - Creates new file
 * ‚Ä¢ mkdirp(path) - Creates directory path recursively
 * ‚Ä¢ mkdir(currentPath, name) - Creates directory in specific path
 * ‚Ä¢ touch(currentPath, name) - Creates empty file
 * ‚Ä¢ rm(currentPath, name, recursive) - Deletes file/directory
 * ‚Ä¢ mv(sourcePath, targetPath) - Moves/renames files/directories
 * ‚Ä¢ cp(currentPath, source, target) - Copies files/directories
 * ‚Ä¢ writeFile(fullPath, content, isBinary) - Writes content to file
 * ‚Ä¢ readFile(fullPath, options) - Reads file content
 * ‚Ä¢ asyncReadFile(path) - Async file reading with Promise
 * 
 * File Type Detection:
 * - video: mp4, mov, avi, webm
 * - audio: mp3, wav, flac, m4a  
 * - image: png, jpg, jpeg, gif
 * - text: txt, log, md, html, css, json
 * - executable: js, app
 * - archive: zip
 * - unvalid: all other extensions
 * 
 * Special Features:
 * - Binary file support via Uint8Array/Blob
 * - URL-based external file references
 * - ZIP archive extraction with progress tracking
 * - Automatic application association
 * - File size formatting (B, KB, MB, GB)
 * 
 * üñºÔ∏è DESKTOP ENVIRONMENT (Desktop Class)
 * ================================================
 * 
 * Applications Configuration:
 * {
 *   explorer: {name: "File Explorer", class: "explorer", icon: svg, handler: Function}
 *   terminal: {name: "Terminal", class: "terminal", icon: svg, handler: Function}
 *   editor: {name: "Text Editor", class: "text", icon: svg, handler: Function}
 *   imageViewer: {name: "Image Viewer", class: "image", icon: svg, handler: Function}
 *   videoPlayer: {name: "Video Player", class: "video", icon: svg, handler: Function}
 *   gitHubLink: {name: "Open Source", icon: svg, handler: Function}
 * }
 * 
 * Desktop Icons:
 * - Automatic creation from apps configuration
 * - CSS classes for styling (explorer, terminal, text, image, video)
 * - Click handlers launch corresponding applications
 * - SVG icon integration from global icons object
 * 
 * ü™ü WINDOW MANAGEMENT SYSTEM (Modal Class)
 * ================================================
 * 
 * Window Controls:
 * ‚Ä¢ Close (red button) - Closes window with optional callback confirmation
 * ‚Ä¢ Minimize (yellow button) - Collapses window to invisible state
 * ‚Ä¢ Maximize (green button) - Toggles fullscreen within browser viewport
 * ‚Ä¢ Info (i) - Shows application information dialog
 * 
 * Drag & Drop Features:
 * - Mouse and touch event support
 * - Boundary detection (prevents dragging outside viewport)
 * - Z-index management (bring to front on click)
 * - Transition animations for smooth movement
 * 
 * Window States:
 * - Active/Inactive (shadow and z-index differentiation)
 * - Minimized (hidden but preserved in DOM)
 * - Maximized (full viewport coverage)
 * - Blocked (for modal dialogs, prevents interaction)
 * 
 * Keyboard Support:
 * - ESC key closes window
 * - Focus management for input elements
 * 
 * ‚å®Ô∏è TERMINAL EMULATOR (Terminal Class)
 * ================================================
 * 
 * Command Structure:
 * command [arguments] [options] && command2 [arguments]
 * 
 * Available Commands:
 * 
 * FILE SYSTEM COMMANDS:
 * ‚Ä¢ ls - List directory contents with file types and sizes
 * ‚Ä¢ cd <path> - Change directory (supports .., ., absolute/relative paths)
 * ‚Ä¢ pwd - Print current working directory
 * ‚Ä¢ mkdir <name> - Create new directory
 * ‚Ä¢ touch <name> - Create new file
 * ‚Ä¢ rm [-r] <path> - Remove file/directory (-r for recursive directory removal)
 * ‚Ä¢ mv <source> <target> - Move/rename files and directories
 * ‚Ä¢ cp <source> <target> - Copy files and directories
 * 
 * FILE CONTENT COMMANDS:
 * ‚Ä¢ cat <file> - Display file contents
 * ‚Ä¢ echo [text] > [file] - Display text or write to file
 * ‚Ä¢ notepad [file] - Open text editor (optional file parameter)
 * 
 * SYSTEM COMMANDS:
 * ‚Ä¢ help [command] - Show help information
 * ‚Ä¢ about - Show version and author information
 * ‚Ä¢ clear - Clear terminal screen
 * ‚Ä¢ exit - Close terminal application
 * ‚Ä¢ special - Enter math calculation mode
 * 
 * NETWORK COMMANDS:
 * ‚Ä¢ download <url> [filename] - Download file from URL with progress
 * ‚Ä¢ progress [duration] [size] [label] - Simulate download with progress bar
 * 
 * ARCHIVE COMMANDS:
 * ‚Ä¢ unarchive <filename> - Extract ZIP archive with progress tracking
 * 
 * SPECIAL MODE COMMANDS (when in special mode):
 * ‚Ä¢ calc <expression> - Evaluate mathematical expressions
 * ‚Ä¢ exit - Return to normal mode
 * 
 * Terminal Features:
 * - Command history with arrow key navigation
 * - Tab completion for commands and file names
 * - Syntax highlighting and error indicators
 * - Progress bars for long-running operations
 * - Virtual keyboard for mobile devices
 * - Command chaining with && operator
 * 
 * üìÑ TEXT EDITOR (TextEditor Class)
 * ================================================
 * 
 * File Operations:
 * - New file creation (Ctrl+N)
 * - File loading from file system
 * - Save file (Ctrl+S) 
 * - Save As functionality
 * - Auto-detection of unsaved changes
 * 
 * Interface Features:
 * - Line, character, and size counters
 * - Encoding display (UTF-8, binary)
 * - Status bar messages (success, error, info)
 * - File menu with dropdown options
 * 
 * Safety Features:
 * - Exit confirmation for unsaved changes
 * - Three options: Save, Don't Save, Cancel
 * - Automatic path creation for new directories
 * 
 * üìÇ FILE EXPLORER (FileExplorer Class)
 * ================================================
 * 
 * Navigation:
 * - Breadcrumb path display (click to edit manually)
 * - Back button for parent directory navigation
 * - Refresh button to reload current directory
 * - Double-click folders to enter, files to open
 * 
 * Sorting System:
 * - Name (ascending/descending alphabetical)
 * - Type (directories first, then files by type)
 * - Size (file size in bytes, directory item count)
 * - Visual indicators (‚Üë‚Üì arrows) for sort order
 * 
 * CONTEXT MENU OPERATIONS (Right-click):
 * 
 * On Files/Folders:
 * ‚Ä¢ Open / Open Folder - Opens with default application
 * ‚Ä¢ Open As - Shows application picker for files
 * ‚Ä¢ Copy File Path - Copies absolute path to clipboard
 * ‚Ä¢ Rename - Renames item (also enables move operations between directories)
 * ‚Ä¢ Delete - Permanently deletes with confirmation dialog
 * 
 * On Empty Space:
 * ‚Ä¢ Refresh - Reloads current directory
 * ‚Ä¢ New Folder - Creates new directory with prompt
 * ‚Ä¢ New File - Creates new file with prompt
 * ‚Ä¢ Copy Current Path - Copies directory path to clipboard
 * 
 * RENAME/MOVE FUNCTIONALITY:
 * - Rename dialog accepts full paths, enabling move operations
 * - Example: renaming "file.txt" to "../newfolder/file.txt" moves the file
 * - Uses fileSystem.mv() method which handles both rename and move operations
 * - Preserves file content and metadata during move
 * 
 * File Display:
 * - Type-specific icons from SVG collection
 * - File type descriptions (PNG Image, MP3 Audio, etc.)
 * - Size formatting (B, KB, MB, GB for files, item count for directories)
 * - Selection highlighting with visual feedback
 * 
 * üéµ MEDIA APPLICATIONS
 * ================================================
 * 
 * IMAGE VIEWER (ImageViewer Class):
 * - Auto-scaling to fit window
 * - Loading spinner during file load
 * - Error handling for corrupt images
 * - Support for PNG, JPG, JPEG, GIF formats
 * 
 * AUDIO PLAYER (AudioPlayer Class):
 * - Native HTML5 audio controls
 * - Media Session API integration (system media controls)
 * - Metadata display (file name in title)
 * - Support for MP3, WAV, FLAC, M4A formats
 * 
 * VIDEO PLAYER (VideoPlayer Class):
 * - Custom control interface with:
 *   - Play/pause toggle
 *   - Progress bar with scrubbing
 *   - Volume control with mute
 *   - Time display (current/total)
 *   - Fullscreen toggle
 * - Advanced Settings Menu:
 *   - Video Scale: Fit, Fill, Stretch
 *   - Playback Speed: 0.5x to 2.0x
 *   - Zoom Control: 10% to 200% with +/- buttons
 * - Keyboard Shortcuts:
 *   - Space: Play/pause
 *   - Arrow Left/Right: 5-second seek
 *   - F: Toggle fullscreen
 * - Auto-hiding controls with mouse movement detection
 * - Loading states and error handling
 * 
 * üí¨ DIALOG SYSTEM (Dialog Class)
 * ================================================
 * 
 * Dialog Types:
 * - info: Blue information dialogs
 * - warning: Yellow warning dialogs with caution symbol  
 * - error: Red error dialogs with X symbol
 * - question: Blue question dialogs with ? symbol
 * 
 * Button Configuration:
 * - Custom button arrays with primary button highlighting
 * - Automatic Enter key binding for primary action
 * - ESC key binding for cancel/close
 * 
 * Modal Behavior:
 * - Blocks parent window interaction
 * - Auto-focuses primary button
 * - Returns Promise with user selection
 * 
 * üé® ICON SYSTEM
 * ================================================
 * 
 * Global icons object contains 40+ SVG icons:
 * - Navigation: arrowUp, arrowDown, arrowLeft, arrowRight, enter
 * - File Operations: openFile, openFolder, openAs, rename, delete, copy, copyFile
 * - UI Controls: refresh, settings, fullscreen, minFullscreen
 * - Media Controls: volumeMute, volumeDown, volumeUp, pause, play
 * - File Type Icons: folder, audio, image, video, camera, text, terminal, explorer
 * - Specific File Types: fileUnvalid, fileVideo, fileImage, fileAudio, fileArchive, fileText, fileExecutable
 * - Application: github
 * - Dialog Icons: error, warning, question, info
 * 
 * üîß TECHNICAL IMPLEMENTATION
 * ================================================
 * 
 * Storage Management:
 * - File system serialization to JSON
 * - Binary data handling via Uint8Array
 * - Blob URL creation for media files
 * - CORS proxy for external downloads
 * 
 * Security Features:
 * - JavaScript execution confirmation for .js files
 * - Input validation and sanitization
 * - Path traversal protection
 * - Safe math evaluation in terminal special mode
 * 
 * Mobile Support:
 * - Touch event handlers for all interactions
 * - Virtual keyboard for terminal input
 * - Responsive design adaptations
 * - Touch-friendly button sizes
 * 
 * Performance Optimizations:
 * - Debounced event handlers
 * - Efficient file system traversal algorithms
 * - Lazy loading of media content
 * - CSS transitions for smooth animations
 * 
 * Error Handling:
 * - Comprehensive try-catch blocks
 * - User-friendly error messages
 * - Fallback operations for failed actions
 * - Graceful degradation for unsupported features
 * 
 * üöÄ USAGE EXAMPLES
 * ================================================
 * 
 * File System Operations:
 * // In terminal
 * mkdir documents
 * cd documents
 * touch report.txt
 * echo "Hello World" > report.txt
 * cat report.txt
 * mv report.txt ../archive.txt
 * 
 * Media Playback:
 * // Open media files
 * open /bin/lion_video.mp4
 * open /bin/lion_photo.png
 * open /bin/kamin.mp3
 * 
 * Advanced Operations:
 * // Download and extract archive
 * download https://example.com/files.zip
 * unarchive files.zip
 * 
 * // Math calculations
 * special
 * 2+2*5
 * exit
 * 
 * üì± BROWSER COMPATIBILITY
 * ================================================
 * 
 * Required APIs:
 * - ES6+ Features: Classes, Promises, Arrow Functions
 * - Web Storage API (localStorage)
 * - File API (Blob, URL.createObjectURL)
 * - Fullscreen API
 * - Touch Events (optional, for mobile)
 * - Clipboard API (optional, with fallback)
 * 
 * Supported Browsers:
 * - Chrome 60+
 * - Firefox 55+
 * - Safari 11+
 * - Edge 79+
 * 
 * Mobile Browsers:
 * - iOS Safari 11+
 * - Chrome Mobile 60+
 * - Samsung Internet 8.2+
 * 
 * ================================================
 * üéØ KEY IMPLEMENTATION NOTES
 * ================================================
 * 
 * 1. File Explorer's rename functionality doubles as move operation
 *    when providing full paths in the rename dialog
 * 
 * 2. Terminal supports command chaining with && operator for
 *    sequential command execution
 * 
 * 3. All media players use Blob URLs for file access to avoid
 *    browser security restrictions
 * 
 * 4. The file system maintains separate encoding flags for
 *    text vs binary file handling
 * 
 * 5. Mobile support includes virtual keyboard and touch-optimized
 *    interface elements throughout all applications
 * 
 * 6. Progress tracking is implemented for downloads, archive
 *    extraction, and simulated operations
 * 
 * 7. Comprehensive error handling with user-friendly messages
 *    and recovery options
 */